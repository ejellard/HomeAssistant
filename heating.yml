blueprint:
  name: Room Heating - Boiler vs AC
  description: Automatically control room heating using either boiler or AC based on a binary sensor
  domain: automation
  input:
    target_temperature_entity:
      name: Target Temperature Input
      description: The input_number entity that sets the target temperature for this room
      selector:
        entity:
          domain: input_number
    
    ac_entity:
      name: Air Conditioner Climate Entity
      description: The climate entity for the room's air conditioning unit
      selector:
        entity:
          domain: climate
    
    wiser_entity:
      name: Wiser Heating Climate Entity
      description: The climate entity for the room's Wiser heating system
      selector:
        entity:
          domain: climate
    
    ac_device_id:
      name: AC Device ID
      description: The device ID used for the rest_command.set_ac_optional_mode
      selector:
        text:
    
    heating_mode_sensor:
      name: Heat with AC Binary Sensor
      description: Binary sensor that determines whether to use AC for heating (on) or boiler (off)
      default: binary_sensor.heatwithairconditioning
      selector:
        entity:
          domain: binary_sensor

triggers:
  - trigger: state
    entity_id: !input target_temperature_entity
  - trigger: state
    entity_id: !input heating_mode_sensor

conditions: []

actions:
  - if:
      - condition: state
        entity_id: !input heating_mode_sensor
        state: "off"
    then:
      # Use Wiser boiler for heating
      - action: climate.set_temperature
        data:
          temperature: "{{ states(target_temperature_entity) | float }}"
        target:
          entity_id: !input wiser_entity
      
      - action: climate.turn_off
        data: {}
        target:
          entity_id: !input ac_entity
    
    else:
      # Use AC for heating mode
      - action: climate.set_temperature
        data:
          temperature: 8
        target:
          entity_id: !input wiser_entity
      
      - if:
          - condition: numeric_state
            entity_id: !input target_temperature_entity
            above: 17
        then:
          # Temperature above 17°C - use AC for heating
          - action: climate.set_temperature
            data:
              temperature: "{{ (states(target_temperature_entity) | float) + 2 }}"
              hvac_mode: heat
            target:
              entity_id: !input ac_entity
          
          - action: rest_command.set_ac_optional_mode
            data:
              device_id: !input ac_device_id
              command: setAcOptionalMode
              arguments:
                - quiet
        
        else:
          # Temperature 17°C or below - turn off AC
          - action: climate.turn_off
            data: {}
            target:
              entity_id: !input ac_entity

mode: single

variables:
  target_temperature_entity: !input target_temperature_entity
